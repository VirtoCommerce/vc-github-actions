name: "virtocommerce.com docs"
on:
  workflow_dispatch:
  schedule:
    - cron: '30 19 * * *'
  push:
    branches:
      - main
      - master
      - feature/structure_redesign

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
           # Core MkDocs
           pip install mkdocs mkdocs-material==9.5.4

           # Versioning support
           pip install mike

           # All required plugins
           pip install mkdocs-awesome-pages-plugin \
                      mkdocs-git-revision-date-localized-plugin==0.5 \
                      mkdocs-minify-plugin \
                      mkdocs-redirects \
                      pymdown-extensions \
                      jinja2 \
                      mkdocs-include-markdown-plugin \
                      mkdocs-glightbox \
                      mkdocs-monorepo-plugin

      - name: Setup Git Credentials
        uses: VirtoCommerce/vc-github-actions/setup-git-credentials-github@master
        with:
          githubToken: ${{ secrets.REPO_TOKEN }}

      - name: Update versioned docs
        uses: VirtoCommerce/vc-github-actions/update-virtocommerce-docs@master  # New versioned action
        with:
          azureSubscriptionId: ${{ secrets.AZURESUBSCRIPTIONID }}
          azureResourceGroupName: ${{ secrets.AZURERESOURCEGROUPNAME }}
          azureWebAppName: ${{ secrets.AZUREWEBAPPNAME }}
          azureApiKey: ${{ secrets.AZUREAPIKEY }}
          azureTenantId: ${{ secrets.AZURETENANTID }}
          azureAppId: ${{ secrets.AZUREAPPID }}
          dockerRegistry: ${{ secrets.MAIN_DOCKER_REGISTRY }}
          dockerUsr: ${{ secrets.VCPT_DOCKER_USER }}
          dockerPwd: ${{ secrets.VCPT_DOCKER_PASSWORD }}

      - name: Deploy to Virto Cloud
        run: |
            # Get version from config for tagging
            if [ -f "vc-docs/version-config.json" ]; then
              VERSION=$(jq -r '.version' vc-docs/version-config.json)
              IMAGE_TAG="${VERSION}-${{ github.run_number }}"
            else
              IMAGE_TAG="${{ github.run_number }}"
            fi

            dotnet tool update --global VirtoCommerce.GlobalTool
            vc-build CloudEnvSetParameter -CloudUrl https://portal.virtocommerce.cloud -CloudToken ${{ secrets.VCPT_CLOUD_TOKEN }} -EnvironmentName vcpt-license -HelmParameters custom.app1.image.tag=$IMAGE_TAG
            vc-build CloudEnvStatus -CloudUrl https://portal.virtocommerce.cloud -CloudToken ${{ secrets.VCPT_CLOUD_TOKEN }} -EnvironmentName vcpt-license  -HealthStatus Progressing
            vc-build CloudEnvStatus -CloudUrl https://portal.virtocommerce.cloud -CloudToken ${{ secrets.VCPT_CLOUD_TOKEN }} -EnvironmentName vcpt-license -HealthStatus Healthy -SyncStatus Synced
