name: 'GraphQL Tests'
description: 'Runs GraphQL Tests'
inputs:
  adminPassword:
    description: 'Admin Password'
    required: true
    type: string
  adminUsername:
    description: 'Admin Username'
    required: true
    type: string
  backUrl:
    description: 'Back URL'
    required: true
    type: string
  baseUrl:
    description: 'Base URL'
    required: true
    type: string
  browser:
    description: 'Browser'
    required: true
    type: string
  testSecretEnvFile:
    description: 'Test secret environment file content'
    required: true
    type: string
  vctestingPath:
    description: 'UI tests path'
    required: true
    type: string
  vctestingRepo:
    description: 'UI tests repository'
    required: true
    type: string
  vctestingRepoBranch:
    description: 'UI tests repository branch'
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Getting tests
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.vctestingRepo }}
        ref: ${{ inputs.vctestingRepoBranch }}
        path: ${{ inputs.vctestingPath }}

    - name: Create .env file
      shell: bash
      env:
        SECRET_ENV_FILE: ${{ inputs.testSecretEnvFile }}
      run: |
        echo "Creating .env file..."
        cd ${{ inputs.vctestingPath }}
        echo "$SECRET_ENV_FILE" > .env
        chmod 600 .env
        echo "..Done."

    - name: Update .env file with local URLs
      shell: bash
      run: |
        echo "Updating .env file to use local backend URLs..."
        cd ${{ inputs.vctestingPath }}
        # Replace any BACKEND_BASE_URL value with localhost URL
        sed -i 's|^BACKEND_BASE_URL=.*|BACKEND_BASE_URL=http://localhost:8090|g' .env
        # Replace any FRONTEND_BASE_URL value with localhost URL
        sed -i 's|^FRONTEND_BASE_URL=.*|FRONTEND_BASE_URL=http://localhost|g' .env
        echo "..Done."

    - name: Install dependencies
      shell: bash
      run: |
        echo "Installing Python dependencies for GraphQL tests..."
        cd ${{ inputs.vctestingPath }}
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-html

    - name: Seed test data
      shell: pwsh
      run: |
        echo "Seeding test data and starting indexing..."
        ls -la
        echo "github.workspace: $github.workspace"
        ls -la $github.workspace

        cd ${{ inputs.vctestingPath }}
        $envFile = get-content -path ./.env
        if ( $envFile -match 'ADMIN_PASSWORD=\S+' ) {
          $m = $envFile -match 'ADMIN_PASSWORD=\S+'
          $adminPassword = $m[0].split('=')[1]
          Write-Host "`e[32mSet password for admin user from env file"
        } else {
          $adminPassword = 'store'
          Write-Host "`e[32mSet password for admin user from default value"
        }
        python -m dataset.dataset_seeder
        wget https://raw.githubusercontent.com/VirtoCommerce/vc-github-actions/refs/heads/master/docker-env-full/sripts/start-indexing.ps1
        # ./start-indexing.ps1 -platformUrl http://localhost:8090 -adminUsername admin -adminPassword $adminPassword
        ./start-indexing.ps1 -platformUrl http://localhost:8090 -adminUsername admin -adminPassword $adminPassword

    - name: Install Playwright Browsers
      shell: bash
      run: |
        echo "Installing Playwright browsers for ${{ inputs.browser }}..."
        cd ${{ inputs.vctestingPath }}
        playwright install --with-deps ${{ inputs.browser }}
            
    - name: Run GraphQL Tests
      shell: bash
      run: |
        echo "Running GraphQL tests against ${{ inputs.baseUrl }}"
        cd ${{ inputs.vctestingPath }}
        pytest tests_graphql/tests/ -m "not ignore" --browser ${{ inputs.browser }} --html=graphql-report.html --self-contained-html --tracing=retain-on-failure -v -s

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: graphql-test-results-${{ inputs.browser }}
        path: |
          ${{ inputs.vctestingPath }}/graphql-report.html
          ${{ inputs.vctestingPath }}/playwright-report/
          ${{ inputs.vctestingPath }}/test-results/
        retention-days: 30
