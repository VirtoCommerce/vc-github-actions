name: 'Update virtocommerce.com/docs 2'
description: 'Makes and updates documentation for virtocommerce.com/docs'
inputs:
  azureSubscriptionId:
    description: "Azure Subscription ID"
    required: true
  azureResourceGroupName:
    description: "Azure Resource Group Name"
    required: true
  azureWebAppName:
    description: "Azure WebApp Name"
    required: true
  azureTenantId:
    description: ""
    required: true
  azureApiKey:
    description: ""
    required: true
  azureAppId:
    description: ""
    required: true
  dockerRegistry:
    description: "Docker Registry"
    required: true
  dockerUsr:
    description: "Docker User"
    required: true
  dockerPwd:
    description: "Docker Passsword"
    required: true
  

runs:
  using: "composite"
  steps:
    - name: Preparing
      shell: pwsh
      working-directory: ${{ github.workspace }}
      run: |
        pwsh -file ${{ github.action_path }}/scripts/vc_docs_get_sources.ps1 -ErrorAction Continue

    - name: Build Docs
      working-directory: ${{ github.workspace }}/vc-platform
      shell: bash
      run: |
        mkdocs build && ls -la && 7z a ${{ github.workspace }}/site.zip ./site/* -r
  
    - name: Build Old Docs
      working-directory: ${{ github.workspace }}/2.0
      shell: pwsh
      run: |
        wget https://vc3prerelease.blob.core.windows.net/packages/docs2.0.zip -O olddocs.zip
        unzip olddocs.zip -d ./site

    - name: Build New Docs
      working-directory: ${{ github.workspace }}
      shell: pwsh
      run: |
        git clone https://github.com/VirtoCommerce/vc-docs --branch "master"
        cd vc-docs
        ./build.ps1
        Copy-Item -Path ./site -Destination ../vc-platform/site/new -Recurse -Force

    - name: Docker
      shell: pwsh
      run: |
        dotnet tool install --global VirtoCommerce.GlobalTool
        Copy-Item -Path ${{ github.action_path }}/docker/* -Destination ./ -Recurse -Force
        vc-build BuildAndPush -DockerUsername ${{ inputs.dockerUsr }} -DockerPassword ${{ inputs.dockerPwd }} -DockerfilePath ./Dockerfile -DockerImageName ${{ inputs.dockerRegistry }}/vcpt/docs -DockerImageTag $env:GITHUB_RUN_NUMBER -DockerRegistryUrl ${{ inputs.dockerRegistry }}
        
#     - name: Upload docs
#       shell: pwsh
#       env: 
#         AzureSubscriptionIDProd: ${{ inputs.azureSubscriptionId }}
#         AzureResourceGroupNameProd: ${{ inputs.azureResourceGroupName }}
#         AzureWebAppNameProd: ${{ inputs.azureWebAppName }}
#         ArtifactPath: ${{ github.workspace }}/site.zip
#         AzureAPIKey: ${{ inputs.azureApiKey }}
#         AzureTenantID: ${{ inputs.azureTenantId }}
#         AzureAppID: ${{ inputs.azureAppId }}
#       run: |
#         pwsh -file ${{ github.action_path }}/scripts/DocsUpdate.ps1
