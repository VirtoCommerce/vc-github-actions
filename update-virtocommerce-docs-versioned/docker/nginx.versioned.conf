server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    root   /usr/share/nginx/html;
    index  index.html index.htm;
    
    # Handle version selector requests for each versioned subsite
    location ~ ^/(marketplace|platform|storefront)/(developer-guide|user-guide|deployment-on-cloud)/versions\.json$ {
        try_files $uri =404;
        add_header Content-Type application/json;
        add_header Access-Control-Allow-Origin *;
    }
    
    # Redirect URLs without version to latest version (HTTP redirect)
    # Example: /platform/developer-guide/Fundamentals/... -> /platform/developer-guide/latest/Fundamentals/...
    location ~ ^/(marketplace|platform|storefront)/(developer-guide|user-guide|deployment-on-cloud)/(?!([0-9]+\.[0-9]+|[0-9]+\.[0-9]+-S[0-9]+|latest|stable|versions\.json))(.+)$ {
        return 302 /$1/$2/latest/$3$is_args$args;
    }
    
    # Handle versioned content 
    location ~ ^/(marketplace|platform|storefront)/(developer-guide|user-guide|deployment-on-cloud)/(latest|stable|[0-9]+\.[0-9]+|[0-9]+\.[0-9]+-S[0-9]+)/ {
        # Only try file and directory with index, don't fall back to subsite root
        try_files $uri $uri/index.html =404;
    }
    
    # Redirect subsites root to their default version (created by mike set-default)
    location ~ ^/(marketplace|platform|storefront)/(developer-guide|user-guide|deployment-on-cloud)/?$ {
        try_files $uri/index.html $uri =404;
    }
    
    # Legacy URL redirects for backward compatibility
    rewrite ^/new/user_docs/storefront/(.*)$ /storefront/user-guide/latest/$1 permanent;
    rewrite ^/new/user_docs/marketplace_user_docs/(.*)$ /marketplace/user-guide/latest/$1 permanent;
    rewrite ^/new/user_docs/(.*)$ /platform/user-guide/latest/$1 permanent;
    rewrite ^/new/dev_docs/storefront-development/(.*)$ /storefront/developer-guide/latest/$1 permanent;
    rewrite ^/new/dev_docs/(.*)$ /platform/developer-guide/latest/$1 permanent;
    rewrite ^/new/(.*)$ /$1 permanent;
    
    # Main location block
    location / {
        try_files $uri $uri/ $uri/index.html =404;
    }

    # Error pages
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

