name: 'Update docs.virtocommerce.org'
description: 'Makes and updates documentation for docs.virtocommerce.org'
inputs:
  azureSubscriptionId:
    description: "Azure Subscription ID"
    required: true
  azureResourceGroupName:
    description: "Azure Resource Group Name"
    required: true
  azureWebAppName:
    description: "Azure WebApp Name"
    required: true
  azureTenantId:
    description: ""
    required: true
  azureApiKey:
    description: ""
    required: true
  azureAppId:
    description: ""
    required: true
  dockerRegistry:
    description: "Docker Registry"
    required: true
  dockerUsr:
    description: "Docker User"
    required: true
  dockerPwd:
    description: "Docker Passsword"
    required: true
  

runs:
  using: "composite"
  steps:
    - name: Build docs
      shell: pwsh
      working-directory: ${{ github.workspace }}
      run: |
        #git clone https://github.com/VirtoCommerce/vc-platform.git --branch "master"
        git clone https://github.com/VirtoCommerce/vc-docs --branch "feature/structure_redesign"
        cd vc-docs
        ./build.ps1

    - name: Docker
      shell: pwsh
      working-directory: ${{ github.workspace }}
      run: |
        dotnet tool install --global VirtoCommerce.GlobalTool
        Copy-Item -Path ${{ github.action_path }}/docker/* -Destination ./ -Recurse -Force
        vc-build BuildAndPush -DockerUsername ${{ inputs.dockerUsr }} -DockerPassword ${{ inputs.dockerPwd }} -DockerfilePath ./Dockerfile -DockerImageName ${{ inputs.dockerRegistry }}/vcpt/docs -DockerImageTag $env:GITHUB_RUN_NUMBER -DockerRegistryUrl ${{ inputs.dockerRegistry }}
        
#     - name: Upload docs
#       shell: pwsh
#       env: 
#         AzureSubscriptionIDProd: ${{ inputs.azureSubscriptionId }}
#         AzureResourceGroupNameProd: ${{ inputs.azureResourceGroupName }}
#         AzureWebAppNameProd: ${{ inputs.azureWebAppName }}
#         ArtifactPath: ${{ github.workspace }}/site.zip
#         AzureAPIKey: ${{ inputs.azureApiKey }}
#         AzureTenantID: ${{ inputs.azureTenantId }}
#         AzureAppID: ${{ inputs.azureAppId }}
#       run: |
#         pwsh -file ${{ github.action_path }}/scripts/DocsUpdate.ps1
