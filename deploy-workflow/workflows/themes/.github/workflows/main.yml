# v1.1
name: Theme CI
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
    branches:
      [master, dev]
  pull_request:
    branches:
      [master, dev]
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'

jobs:
  ci:
    runs-on: ubuntu-latest
    env: 
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v1

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: image

    - name: Get changelog
      id: changelog
      uses: VirtoCommerce/vc-github-actions/changelog-generator@master

    - name: SonarCloud Scan
      uses: VirtoCommerce/vc-github-actions/sonar-theme@master
      with:
        projectVersion: ${{ steps.image.outputs.fullVersion }}

    - name: Build
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
      uses: VirtoCommerce/vc-github-actions/build-theme@master
      with:
        versionSuffix: ${{ steps.image.outputs.suffix }}

    - name: Publish
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
      id: publish
      uses: VirtoCommerce/vc-github-actions/publish-theme@master

    - name: Create Release
      if: github.ref == 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.image.outputs.prefix }}
        release_name: ${{ steps.image.outputs.prefix }}
        draft: false
        prerelease: false
        body: ${{ steps.changelog.outputs.changelog }}

    - name: Upload Release Asset
      if: github.ref == 'refs/heads/master'
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.publish.outputs.artifactPath }}
        asset_name: ${{ steps.publish.outputs.artifactName }}
        asset_content_type: application/zip